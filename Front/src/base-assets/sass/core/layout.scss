@use 'normalize';
@use 'mixins';
@use 'theme';
@use 'font';

// Global styles
html {
    font-family: Barlow, sans-serif;
    overflow: hidden;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    text-size-adjust: 100%;
    width: 100vw;
    height: 100vh;
    box-sizing: border-box;
}

// Include the theme mixing, which will set up the theme variables
@include theme.theme;
// Add possibility for switching between dark and light modes
@include theme.modes;

/* // Enable this to debug layout
* {
  border: 1px solid #ff0000 !important;
}
/**/

// Pointer cursor
.pointer {
    cursor: pointer;
}

// Depth classes separate content visually to different depth levels from 1 to 12, where 1 is closest to
// desktop and 12 is furthest elevated from the desktop.
// Note: We currently only support levels 8 and 12, and rest of the numbers are reserved for later use.

// Depth class for cards
.depth-8 {
    box-shadow: 0 3.2px 7.2px 0 rgba(0, 0, 0, 0.132),
        0 0.6px 1.8px 0 rgba(0, 0, 0, 0.108);
}

// Depth for tooltips and hovers
.depth-12 {
    box-shadow: 0 6.2px 7.2px 0 rgba(0, 0, 0, 0.132),
        0 0.6px 1.8px 0 rgba(0, 0, 0, 0.108);
}

// Todo; Remove these after old HTML table components have been converted to HOT
// Flexbox container classes
.flex-container {
    display: flex;

    &--row {
        @extend .flex-container;
        flex-direction: row;
    }

    &--column {
        @extend .flex-container;
        flex-direction: column;
    }
}

.inline-flex-container {
    display: inline-flex;

    &--row {
        @extend .flex-container;
        flex-direction: row;
    }

    &--column {
        @extend .flex-container;
        flex-direction: column;
    }
}

// Basic flex-item class
.flex-item {
    flex: auto;
}

// Flex item utility classes
.flex-item--nowrap {
    flex-wrap: nowrap;
}

.flex-item--grow-0 {
    flex-grow: 0;
}

.flex-item--shrink-0 {
    flex-shrink: 0;
}

.flex-item--grow-1 {
    flex-grow: 1;
}

.flex-item--shrink-1 {
    flex-shrink: 1;
}

// Overflow utility classes
.overflow-y-auto {
    overflow-y: auto;
}

.overflow-y-hidden {
    overflow-y: hidden !important;
}

.overflow-x-auto {
    overflow-x: auto;
}

.overflow-x-hidden {
    overflow-x: hidden;
}

// Position utility classes
.position {
    &--relative {
        position: relative;
    }

    &--absolute {
        position: absolute;
    }

    &--fixed {
        position: fixed;
    }
}

.float {
    &--right {
        float: right;
    }

    &--left {
        float: left;
    }
}

.centered {
    text-align: center;
    justify-content: center;
}

.space-between {
    justify-content: space-between;
}

// Size utility classes
.fill-height {
    height: 100%;
}

.fill-width {
    width: 100%;
}

.fill-height-half {
    height: 50%;
}

.fill-width-half {
    width: 50%;
}

// Programmatically create padding and margin classes
$default-gap: 0.375rem;
$paddingSizes: 4;
$marginSizes: 4;

@mixin paddingClasses {
    @for $i from 0 through $paddingSizes {
        //Padding on all sides
        .padding-#{$i} {
            padding: $default-gap * $i !important;
        }

        //padding vertically
        .padding-v-#{$i} {
            padding-top: $default-gap * $i !important;
            padding-bottom: $default-gap * $i !important;
        }

        //padding horizontally
        .padding-h-#{$i} {
            padding-left: $default-gap * $i !important;
            padding-right: $default-gap * $i !important;
        }

        //padding top
        .padding-t-#{$i} {
            padding-top: $default-gap * $i !important;
        }

        //padding right
        .padding-r-#{$i} {
            padding-right: $default-gap * $i !important;
        }

        //padding bottom
        .padding-b-#{$i} {
            padding-bottom: $default-gap * $i !important;
        }

        //padding left
        .padding-l-#{$i} {
            padding-left: $default-gap * $i !important;
        }

    }
}

@mixin marginClasses {
    @for $i from 0 through $marginSizes {
        //Margin on all sides
        .margin-#{$i} {
            margin: $default-gap * $i !important;
        }

        //margin vertically
        .margin-v-#{$i} {
            margin-top: $default-gap * $i !important;
            margin-bottom: $default-gap * $i !important;
        }

        //margin horizontally
        .margin-h-#{$i} {
            margin-left: $default-gap * $i !important;
            margin-right: $default-gap * $i !important;
        }

        //margin top
        .margin-t-#{$i} {
            margin-top: $default-gap * $i !important;
        }

        //margin right
        .margin-r-#{$i} {
            margin-right: $default-gap * $i !important;
        }

        //margin bottom
        .margin-b-#{$i} {
            margin-bottom: $default-gap * $i !important;
        }

        //margin left
        .margin-l-#{$i} {
            margin-left: $default-gap * $i !important;
        }
    }
}

@include paddingClasses;
@include marginClasses;
